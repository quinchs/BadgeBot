// AUTOGENERATED: DO NOT MODIFY
// edgeql:831A56DE7467994201BCCE167C37D49BDEE9398BD743FC2F79D441293D01C386
// Generated on 2022-11-27T13:00:53.7130732Z
#nullable enable
using EdgeDB;
using System;

namespace BadgeBot.DB;

#region Types
[EdgeDBType]
public sealed class UpdateUsersStepsResult
{
    [EdgeDBProperty("id")]
    public Guid Id { get; set; }
}

#endregion

public static class UpdateUsersSteps
{
    public static readonly string Query = @"insert User {
  user_id := <str>$user_id,
  step := <int32>$step
}
unless conflict on .user_id
else (
  update User 
  set {
    step := <int32>$step if .step < <int32>$step else .step
  }
)";

    public static Task<UpdateUsersStepsResult> ExecuteAsync(IEdgeDBQueryable client, string? userId, int step, CancellationToken token = default)
        => client.QueryRequiredSingleAsync<UpdateUsersStepsResult>(Query, new Dictionary<string, object?>() { { "user_id", userId }, { "step", step } }, capabilities: (Capabilities)1ul, token: token);

    public static Task<UpdateUsersStepsResult> UpdateUsersStepsAsync(this IEdgeDBQueryable client, string? userId, int step, CancellationToken token = default)
        => ExecuteAsync(client, userId, step, token: token);
}
#nullable restore
